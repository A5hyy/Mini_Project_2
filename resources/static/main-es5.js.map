{"version":3,"sources":["webpack:///src/app/views/pages/auth/login/login.component.html","webpack:///src/app/views/pages/auth/login/login.component.ts","webpack:///src/app/views/pages/auth/service/user-register.service.ts","webpack:///crypto (ignored)","webpack:///src/app/main/guard/auth-guard.ts","webpack:///src/environments/environment.ts","webpack:///src/app/views/pages/home/model/user-dto.ts","webpack:///src/app/shared/material.imports.ts","webpack:///src/app/views/pages/home/users/add-user/add-user.component.ts","webpack:///src/app/views/pages/home/users/add-user/add-user.component.html","webpack:///src/app/main/service/authentication/auth.service.ts","webpack:///src/app/main/service/application/url-encode.service.ts","webpack:///src/app/core/fitness-app/base/base.component.ts","webpack:///src/app/core/fitness-app/base/base.component.html","webpack:///src/app/views/pages/auth/register/register.component.ts","webpack:///src/app/views/pages/auth/register/register.component.html","webpack:///src/app/views/pages/auth/auth.component.ts","webpack:///src/app/views/pages/auth/auth.component.html","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/views/pages/home/settings/change-password/change-password.component.ts","webpack:///src/app/views/pages/home/settings/change-password/change-password.component.html","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/views/pages/auth/auth.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/main/service/application/date.service.ts","webpack:///src/app/main/service/data/data.service.ts","webpack:///src/app/views/pages/home/service/user.service.ts","webpack:///src/app/main/settings/constants.ts","webpack:///src/app/main/main.module.ts","webpack:///src/app/app.module.ts","webpack:///src/app/main/service/application/application.service.ts","webpack:///src/app/main/service/interceptors/token-interceptor.ts","webpack:///src/app/main/service/authentication/privilege.service.ts","webpack:///src/app/main/service/application/encryption.service.ts","webpack:///src/app/main/service/authentication/token.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/main/dto/pagination.ts","webpack:///src/app/main/service/common/common.service.ts","webpack:///src/main.ts","webpack:///src/app/main/settings/commons.settings.ts","webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/main/service/common/alert.service.ts"],"names":["LoginComponent","formBuilder","authService","alertService","route","dialog","loginSubscription","initLoginForm","getLoggedInStatus","subscribe","results","status","navigate","PAGES","home","showToaster","TOASTER_MESSAGES","error","loginForm","group","userName","compose","required","password","unsubscribe","controlName","validationType","control","controls","result","hasError","dirty","touched","invalid","Object","keys","forEach","markAsTouched","value","trim","getEncryptedPassword","userLogin","username","Base64","stringify","crypt","setPublicKey","publicKey","KEYS","PUBLIC_KEY","encrypt","dialogRef","open","panelClass","width","submit","register","UserRegisterService","httpClient","onRegisterUser","userRQ","response","post","ENDPOINTS","registerUser","url","data","next","AuthGuard","router","state","isLoggedIn","localStorage","getItem","ACCESS_TOKEN","setLoggedOut","environment","production","UserDTO","userDTO","userID","firstName","lastName","email","dateOfBirthStr","userType","MaterialImports","CUSTOM_DATE_FORMATS","parse","dateInput","display","monthYearLabel","dateA11yLabel","monthYearA11yLabel","AddUserComponent","userService","dateService","userDto","onSaveOrUpdateUserSubs","user","title","type","initUserForm","userAddEditForm","get","clearValidators","setErrors","updateValueAndValidity","onlySelf","onSaveOrUpdateUser","success","close","confirmPassword","getMomentDateFromDateStr","$event","stopPropagation","preventDefault","submitData","assign","getRawValue","validateEmail","format","DATE_TIME","DEFAULT_DATE_FORMAT","saveOrUpdateUser","String","toLowerCase","match","valid","provide","useClass","deps","useValue","onCancelClick","AuthService","tokenService","dataService","privilegeService","applicationService","loginStatus","logInRequest","login","res","setAccessToken","accessToken","setRefreshToken","refreshToken","setLoggedInUser","setUserPrivileges","privileges","Promise","all","then","console","log","isAccessTokenExpired","isRefreshTokenExpired","expireUserCache","clear","clearTokens","asObservable","UrlEncodeService","b64_table","keyWord","xor_encrypt","b64_encode","b64_decode","xor_decrypt","o1","o2","o3","h1","h2","h3","h4","bits","r","i","enc","charAt","length","slice","indexOf","push","key","charCodeAt","Math","floor","that","c","keyCharAt","fromCharCode","join","BaseComponent","workoutsTitle","onGetUserByIDSubs","getLoggedInUser","isAdmin","isUser","onGetUserByID","currentUser","undefined","showUserData","getUserByID","onClickProfile","onClickChangePassword","logout","RegisterComponent","userRegisterService","onRegisterUserSubs","initRegisterForm","alert","appsErrorMessages","errorCode","registerForm","onRegister","AuthComponent","SharedModule","ChangePasswordComponent","onChangeUserPasswordSubs","initForm","onChangeUserPassword","passwordChangeForm","oldPassword","newPassword","getResetPassword","changeUserPassword","onChangePassword","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","webpackContextKeys","resolve","module","exports","routes","path","component","children","redirectTo","pathMatch","returnUrl","window","location","pathname","AuthModule","ngModule","forChild","AppComponent","DateService","defaultDateFormat","defaultDateTimeFormat","date","dateStr","startOf","endOf","toDate","date1","date2","diff","fromDate","isSameOrBefore","isSame","DataService","commons","conf","request","method","headerParam","responseHandler","options","headerParams","headers","excludeList","showLoading","showToast","excludeErrorHeader","excludeError","isFileUpload","body","isFileDownload","responseType","JSON","withCredentials","skipAuth","handleError","create","hideLoading","resetLoading","showErrorMessage","onApiError","finalMessage","searchData","pagination","hasOwnProperty","getPageData","UserService","onSearchedUsers","onResetUserPassword","reject","searchUsers","searchRQ","searchedUsers","resetUserPassword","saveRQ","selectedUser","Constants","privilegeCodes","ADMIN_DEFAULT_PRIVILEGE","USER_DEFAULT_PRIVILEGE","ACT","INA","gender","F","M","ADMIN","USER","yesNo","Y","N","descriptionTypes","DESCRIPTION","BRAND","MODEL","SPECIFICATIONS","MainModule","multi","AppModule","forRoot","ApplicationService","encryptionService","loggedInUserEncrypted","loggedInUserDecrypted","getDecryptedUser","loadPublicKeyObserving","loadPublicKey","getEncryptedUser","decrypt","LOGGED_USER_ENC","TokenInterceptor","clone","setHeaders","getRefreshToken","handle","getAccessToken","pipe","token","PrivilegeService","adminPrivilege","usersPrivilege","userPrivileges","userPrivilegesEncStr","decryptPrivileges","privilegeCode","hasAnyPrivilege","hasPrivilege","USER_PRIVILEGES","EncryptionService","secretKey","field","toString","cypherStr","bytes","Utf8","TokenService","jwtHelper","accessTokenEnc","refreshTokenEnc","SECRET","setItem","REFRESH_TOKEN","isTokenExpired","loadChildren","m","canActivate","HomeModule","AppRoutingModule","preloadingStrategy","Pagination","pageSize","pageIndex","page","rows","CommonService","onError","loading","showLoadingCount","hideLoadingCount","bootstrapModule","err","SETTINGS","DATE_FORMAT","DATE_TIME_FORMAT","DEFAULT_DATE_TIME_FORMAT","UPLOAD_IMAGE_SIZE_MAX_MB","UPLOAD_IMAGE_ALLOWED_EXTENSIONS","TEST_SYSTEM","TEST_SYSTEM_DISPLAY_NAME","warning","info","custom","mockUrl","searchWorkouts","saveOrUpdateWorkout","webpackEmptyAsyncContext","AlertService","snackBar","message","customConfigs","customClass","toUpperCase","config","duration","verticalPosition","horizontalPosition","afterDismissed"],"mappings":"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","file":"main-es5.js","sourcesContent":["<div id=\"card\" style=\"text-align: center; padding-top: 200px;\">\r\n  <div class=\"row\">\r\n    <!--    <div class=\"col-md-4\">-->\r\n    <mat-card-title>\r\n      <h3 style=\"color: #0F3460;\">FitnessApp : Log In</h3>\r\n    </mat-card-title>\r\n\r\n    <mat-card-content class=\"t-a-c\">\r\n      <form [formGroup]=\"loginForm\" autocomplete=\"off\" class=\"kt-form\" id=\"login-form\" style=\"padding-top: 25px;\">\r\n\r\n        <div class=\"form-group\" style=\"padding-top: 10px;\">\r\n          <mat-form-field style=\"width: 300px;\">\r\n            <mat-label>User Name</mat-label>\r\n            <input autocomplete=\"off\"\r\n                   class=\"user-name\"\r\n                   formControlName=\"userName\"\r\n                   matInput\r\n                   placeholder=\"User Name\"\r\n                   type=\"text\"/>\r\n            <mat-error *ngIf=\"isControlHasError('userName','required')\">\r\n              <strong>Required field</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"form-group\" style=\"padding-top: 10px;\">\r\n          <mat-form-field style=\"width: 300px;\">\r\n            <mat-label>Password</mat-label>\r\n            <input autocomplete=\"off\"\r\n                   class=\"password\"\r\n                   formControlName=\"password\"\r\n                   matInput\r\n                   placeholder=\"Password\"\r\n                   type=\"password\"/>\r\n            <mat-error *ngIf=\"isControlHasError('password','required')\">\r\n              <strong>Required field</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div>\r\n          <div style=\"padding-top: 35px;\">\r\n            <button\r\n              style=\"margin-right:15px;\"\r\n              (click)=\"submit()\"\r\n              color=\"primary\"\r\n              mat-raised-button>Sign In\r\n            </button>\r\n\r\n            <button\r\n              style=\"margin-right:15px;\"\r\n              (click)=\"register()\"\r\n              color=\"primary\"\r\n              mat-raised-button>\r\n              Register\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      system\r\n      \r\n      password\r\n    </mat-card-content>\r\n    <!--    </div>-->\r\n  </div>\r\n</div>\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {Router} from '@angular/router';\r\nimport {SETTINGS} from '../../../../main/settings/commons.settings';\r\nimport * as JSEncryptModule from 'jsencrypt';\r\nimport * as CryptoJS from 'crypto-js';\r\nimport {LocalStorage} from 'ngx-webstorage';\r\nimport {AuthService} from '../../../../main/service/authentication/auth.service';\r\nimport {Subscription} from 'rxjs';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {AlertService} from '../../../../main/service/common/alert.service';\r\nimport {RegisterComponent} from '../register/register.component';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n\r\n  username: any;\r\n  password: any;\r\n  loginForm!: FormGroup;\r\n  loginSubscription = new Subscription();\r\n  @LocalStorage(SETTINGS.PUBLIC_KEY)\r\n  private publicKey: any;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private authService: AuthService,\r\n              private alertService: AlertService,\r\n              private route: Router,\r\n              private dialog: MatDialog) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initLoginForm();\r\n\r\n    this.loginSubscription = this.authService.getLoggedInStatus().subscribe(results => {\r\n      if (results.status) {\r\n        this.route.navigate([SETTINGS.PAGES.home]);\r\n      } else {\r\n        this.alertService.showToaster(\r\n          'Login error : Incorrect username or password entered. Please try again',\r\n          SETTINGS.TOASTER_MESSAGES.error);\r\n      }\r\n    });\r\n  }\r\n\r\n  initLoginForm() {\r\n    this.loginForm = this.formBuilder.group({\r\n      userName: [null, Validators.compose([\r\n        Validators.required\r\n      ])\r\n      ],\r\n      password: [null, Validators.compose([\r\n        Validators.required\r\n      ])\r\n      ]\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.loginSubscription.unsubscribe();\r\n  }\r\n\r\n  isControlHasError(controlName: string, validationType: string): boolean {\r\n    const control = this.loginForm.controls[controlName];\r\n    if (!control) {\r\n      return false;\r\n    }\r\n\r\n    const result = control.hasError(validationType) && (control.dirty || control.touched);\r\n    return result;\r\n  }\r\n\r\n  submit() {\r\n    const controls = this.loginForm.controls;\r\n    /** check form */\r\n    if (this.loginForm.invalid) {\r\n      Object.keys(controls).forEach(controlName =>\r\n        controls[controlName].markAsTouched()\r\n      );\r\n      return;\r\n    }\r\n\r\n    const userName = controls.userName.value.trim();\r\n    const password = this.getEncryptedPassword(controls.password.value);\r\n\r\n    this.authService.userLogin({username: userName, password});\r\n  }\r\n\r\n  private getEncryptedPassword(password: any) {\r\n\r\n    password = CryptoJS.SHA1(password);\r\n    password = CryptoJS.enc.Base64.stringify(password);\r\n\r\n    const crypt = new JSEncryptModule.JSEncrypt();\r\n    crypt.setPublicKey(this.publicKey || SETTINGS.KEYS.PUBLIC_KEY);\r\n    password = crypt.encrypt(password);\r\n\r\n    return password;\r\n  }\r\n\r\n  register() {\r\n    const dialogRef = this.dialog.open(RegisterComponent, {\r\n        panelClass: 'custom-dialog-panel',\r\n        width: '70%'\r\n      }\r\n    );\r\n  }\r\n\r\n  goToClient() {\r\n    this.route.navigate(['/auth/client-page/']);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {SETTINGS} from \"../../../../main/settings/commons.settings\";\r\nimport {Subject} from \"rxjs\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\n\r\n@Injectable()\r\nexport class UserRegisterService {\r\n\r\n  onRegisterUser: Subject<any> = new Subject();\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n  }\r\n\r\n  registerUser(userRQ) {\r\n    let response = this.httpClient.post(SETTINGS.ENDPOINTS.registerUser.url, userRQ);\r\n    response.subscribe((data: any) => {\r\n      this.onRegisterUser.next(data);\r\n    });\r\n  }\r\n}\r\n","/* (ignored) */","// Angular\r\nimport {Injectable} from '@angular/core';\r\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\r\n// RxJS\r\nimport {Observable} from 'rxjs';\r\n// NGRX\r\nimport {AuthService} from \"../service/authentication/auth.service\";\r\nimport {SETTINGS} from \"../settings/commons.settings\";\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private router: Router,\r\n              private authService: AuthService) {\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    if (!this.authService.isLoggedIn()) {\r\n\r\n      if (localStorage.getItem(SETTINGS.ACCESS_TOKEN) != null) {\r\n        // this.alertService.showToaster('Your session is expired', SETTINGS.TOASTER_MESSAGES.warning);\r\n      }\r\n      this.authService.setLoggedOut();\r\n\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","export class UserDTO {\r\n  userID:any;\r\n  userName:any;\r\n  firstName:any;\r\n  lastName:any;\r\n  email:any;\r\n  dateOfBirthStr:any;\r\n  status:any;\r\n  userType:any;\r\n\r\n  constructor(userDTO?) {\r\n    userDTO = userDTO || {};\r\n\r\n    this.userID = userDTO.userID || '';\r\n    this.userName = userDTO.userName || '';\r\n    this.firstName = userDTO.firstName || '';\r\n    this.lastName = userDTO.lastName || '';\r\n    this.email = userDTO.email || '';\r\n    this.dateOfBirthStr = userDTO.dateOfBirthStr || '';\r\n    this.status = userDTO.status || 'ACT';\r\n    this.userType = userDTO.userType || 'ADMIN';\r\n  }\r\n}\r\n","import {NgModule} from \"@angular/core\";\r\nimport {CdkTableModule} from \"@angular/cdk/table\";\r\nimport {MatCheckboxModule} from \"@angular/material/checkbox\";\r\nimport {MatButtonModule} from \"@angular/material/button\";\r\nimport {MatInputModule} from \"@angular/material/input\";\r\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\r\nimport {MatRadioModule} from \"@angular/material/radio\";\r\nimport {MatDatepickerModule} from \"@angular/material/datepicker\";\r\nimport {MatAutocompleteModule} from \"@angular/material/autocomplete\";\r\nimport {MatSelectModule} from \"@angular/material/select\";\r\nimport {MatSliderModule} from \"@angular/material/slider\";\r\nimport {MatSlideToggleModule} from \"@angular/material/slide-toggle\";\r\nimport {MatMenuModule} from \"@angular/material/menu\";\r\nimport {MatGridListModule} from \"@angular/material/grid-list\";\r\nimport {MatNativeDateModule} from \"@angular/material/core\";\r\nimport {MatTreeModule} from \"@angular/material/tree\";\r\nimport {DragDropModule} from \"@angular/cdk/drag-drop\";\r\nimport {MatPaginatorModule} from \"@angular/material/paginator\";\r\nimport {MatSortModule} from \"@angular/material/sort\";\r\nimport {MatTableModule} from \"@angular/material/table\";\r\nimport {MatSnackBarModule} from \"@angular/material/snack-bar\";\r\nimport {MatTooltipModule} from \"@angular/material/tooltip\";\r\nimport {MatDialogModule} from \"@angular/material/dialog\";\r\nimport {MatProgressBarModule} from \"@angular/material/progress-bar\";\r\nimport {MatProgressSpinnerModule} from \"@angular/material/progress-spinner\";\r\nimport {MatIconModule} from \"@angular/material/icon\";\r\nimport {MatChipsModule} from \"@angular/material/chips\";\r\nimport {MatButtonToggleModule} from \"@angular/material/button-toggle\";\r\nimport {MatExpansionModule} from \"@angular/material/expansion\";\r\nimport {MatTabsModule} from \"@angular/material/tabs\";\r\nimport {MatStepperModule} from \"@angular/material/stepper\";\r\nimport {MatCardModule} from \"@angular/material/card\";\r\nimport {MatListModule} from \"@angular/material/list\";\r\nimport {MatToolbarModule} from \"@angular/material/toolbar\";\r\nimport {MatSidenavModule} from \"@angular/material/sidenav\";\r\n\r\n@NgModule({\r\n  exports: [\r\n    CdkTableModule,\r\n    MatCheckboxModule,\r\n    MatCheckboxModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatAutocompleteModule,\r\n    MatDatepickerModule,\r\n    MatFormFieldModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatMenuModule,\r\n    MatSidenavModule,\r\n    MatToolbarModule,\r\n    MatListModule,\r\n    MatGridListModule,\r\n    MatCardModule,\r\n    MatStepperModule,\r\n    MatTabsModule,\r\n    MatExpansionModule,\r\n    MatButtonToggleModule,\r\n    MatChipsModule,\r\n    MatIconModule,\r\n    MatProgressSpinnerModule,\r\n    MatProgressBarModule,\r\n    MatDialogModule,\r\n    MatTooltipModule,\r\n    MatSnackBarModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatPaginatorModule,\r\n    DragDropModule,\r\n    MatTreeModule,\r\n    MatNativeDateModule\r\n  ]\r\n})\r\nexport class MaterialImports {\r\n\r\n}\r\n","import {Component, Inject, OnDestroy, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {SETTINGS} from \"../../../../../main/settings/commons.settings\";\r\nimport * as moment from 'moment';\r\nimport {UserService} from \"../../service/user.service\";\r\nimport {Subscription} from \"rxjs\";\r\nimport {UserDTO} from \"../../model/user-dto\";\r\nimport {DateService} from \"../../../../../main/service/application/date.service\";\r\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from \"@angular/material/core\";\r\nimport {MomentDateAdapter} from \"@angular/material-moment-adapter\";\r\nimport {AlertService} from \"../../../../../main/service/common/alert.service\";\r\n\r\nexport const CUSTOM_DATE_FORMATS = {\r\n  parse: {\r\n    dateInput: 'DD/MM/YYYY',\r\n  },\r\n  display: {\r\n    dateInput: 'DD/MM/YYYY',\r\n    monthYearLabel: 'DD/MM/YYYY',\r\n    dateA11yLabel: 'DD/MM/YYYY',\r\n    monthYearA11yLabel: 'DD/MM/YYYY',\r\n  },\r\n};\r\n\r\n@Component({\r\n  selector: 'app-add-user',\r\n  templateUrl: './add-user.component.html',\r\n  styleUrls: ['./add-user.component.scss'],\r\n  providers: [\r\n    {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\r\n    {provide: MAT_DATE_FORMATS, useValue: CUSTOM_DATE_FORMATS}\r\n  ]\r\n})\r\nexport class AddUserComponent implements OnInit, OnDestroy {\r\n  title: any;\r\n  type: any;\r\n  userAddEditForm!: FormGroup;\r\n  userDto = new UserDTO();\r\n\r\n  onSaveOrUpdateUserSubs = new Subscription();\r\n\r\n  constructor(public dialogRef: MatDialogRef<AddUserComponent>,\r\n              private formBuilder: FormBuilder,\r\n              private userService: UserService,\r\n              private dateService: DateService,\r\n              private alertService: AlertService,\r\n              @Inject(MAT_DIALOG_DATA) public data: any) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.userDto = new UserDTO(this.data.user);\r\n    this.title = this.data.title;\r\n    this.type = this.data.type;\r\n\r\n    this.initUserForm();\r\n\r\n    if (this.type !== 'ADD') {\r\n      this.userAddEditForm.get('password').clearValidators();\r\n      this.userAddEditForm.get('password').setErrors(null);\r\n      this.userAddEditForm.get('confirmPassword').clearValidators();\r\n      this.userAddEditForm.get('confirmPassword').setErrors(null);\r\n\r\n      this.userAddEditForm.updateValueAndValidity({onlySelf: true});\r\n    }\r\n\r\n    this.onSaveOrUpdateUserSubs = this.userService.onSaveOrUpdateUser\r\n      .subscribe((data: any) => {\r\n        if (data) {\r\n          if (this.type == 'ADD') {\r\n            this.alertService.showToaster(\r\n              \"Saved successfully\",\r\n              SETTINGS.TOASTER_MESSAGES.success);\r\n          } else {\r\n            this.alertService.showToaster(\r\n              \"Updated successfully\",\r\n              SETTINGS.TOASTER_MESSAGES.success);\r\n          }\r\n\r\n          this.dialogRef.close(true);\r\n        }\r\n      });\r\n  }\r\n\r\n  initUserForm() {\r\n    this.userAddEditForm = this.formBuilder.group({\r\n      userName: [this.userDto.userName, Validators.compose([\r\n        Validators.required\r\n      ])],\r\n      firstName: [this.userDto.firstName, Validators.compose([\r\n        Validators.required\r\n      ])],\r\n      lastName: [this.userDto.lastName, Validators.compose([\r\n        Validators.required\r\n      ])],\r\n      email: [this.userDto.email, Validators.compose([\r\n        Validators.required\r\n      ])],\r\n      password: [null, Validators.compose([\r\n        Validators.required\r\n      ])],\r\n      confirmPassword: [null, Validators.compose([\r\n        Validators.required\r\n      ])],\r\n      dateOfBirthStr: [this.dateService.getMomentDateFromDateStr(this.userDto.dateOfBirthStr), Validators.compose([\r\n        Validators.required\r\n      ])],\r\n      userType: [this.userDto.userType, Validators.compose([\r\n        Validators.required\r\n      ])],\r\n      status: [this.userDto.status, Validators.compose([\r\n        Validators.required\r\n      ])]\r\n    });\r\n  }\r\n\r\n  isControlHasError(controlName: string, validationType: string): boolean {\r\n    const control = this.userAddEditForm.controls[controlName];\r\n    if (!control) {\r\n      return false;\r\n    }\r\n\r\n    const result = control.hasError(validationType) && (control.dirty || control.touched);\r\n    return result;\r\n  }\r\n\r\n  onCancelClick($event: MouseEvent) {\r\n    if ($event) {\r\n      $event.stopPropagation();\r\n      $event.preventDefault();\r\n    }\r\n\r\n    this.dialogRef.close(false);\r\n  }\r\n\r\n  onSave($event: MouseEvent) {\r\n    if ($event) {\r\n      $event.stopPropagation();\r\n      $event.preventDefault();\r\n    }\r\n\r\n    let submitData = Object.assign({}, this.userAddEditForm.getRawValue());\r\n    let password = submitData.password;\r\n    let confirmPassword = submitData.confirmPassword;\r\n\r\n    if (password !== confirmPassword) {\r\n      this.alertService.showToaster(\r\n        \"Password mismatch\",\r\n        SETTINGS.TOASTER_MESSAGES.error);\r\n      return;\r\n    }\r\n\r\n    if (this.validateEmail(submitData.email) == null) {\r\n      this.alertService.showToaster(\r\n        \"Invalid email\",\r\n        SETTINGS.TOASTER_MESSAGES.error);\r\n      return;\r\n    }\r\n\r\n    submitData.dateOfBirthStr = moment(submitData.dateOfBirthStr).format(SETTINGS.DATE_TIME.DEFAULT_DATE_FORMAT);\r\n    submitData.userID = this.userDto.userID;\r\n\r\n    this.userService.saveOrUpdateUser(submitData);\r\n  }\r\n\r\n  validateEmail(email) {\r\n    return String(email)\r\n      .toLowerCase()\r\n      .match(\r\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n      );\r\n  };\r\n\r\n  isFormValid() {\r\n    return this.userAddEditForm.valid;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.onSaveOrUpdateUserSubs.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-md-11 height-30px\">\r\n    <h5>{{title}}</h5>\r\n  </div>\r\n  <div class=\"col-md-1 t-a-e\">\r\n    <button\r\n      (click)=\"onCancelClick($event)\"\r\n      aria-label=\"Close\"\r\n      class=\"btn-close\"\r\n      type=\"button\">\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n<mat-dialog-content>\r\n  <div class=\"row\">\r\n    <form [formGroup]=\"userAddEditForm\" autocomplete=\"off\" class=\"kt-form\" id=\"login-form\" style=\"padding-top: 25px;\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-4\">\r\n          <mat-form-field style=\"width: 100%;\">\r\n            <mat-label>User Name</mat-label>\r\n            <input autocomplete=\"off\"\r\n                   class=\"user-name\"\r\n                   formControlName=\"userName\"\r\n                   matInput\r\n                   placeholder=\"User Name\"\r\n                   type=\"text\"/>\r\n            <mat-error *ngIf=\"isControlHasError('userName','required')\">\r\n              <strong>Required field</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"col-md-4\">\r\n          <mat-form-field style=\"width: 100%;\">\r\n            <mat-label>First Name</mat-label>\r\n            <input autocomplete=\"off\"\r\n                   class=\"first-name\"\r\n                   formControlName=\"firstName\"\r\n                   matInput\r\n                   placeholder=\"First Name\"\r\n                   type=\"text\"/>\r\n            <mat-error *ngIf=\"isControlHasError('firstName','required')\">\r\n              <strong>Required field</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"col-md-4\">\r\n          <mat-form-field style=\"width: 100%;\">\r\n            <mat-label>Last Name</mat-label>\r\n            <input autocomplete=\"off\"\r\n                   class=\"user-name\"\r\n                   formControlName=\"lastName\"\r\n                   matInput\r\n                   placeholder=\"Last Name\"\r\n                   type=\"text\"/>\r\n            <mat-error *ngIf=\"isControlHasError('lastName','required')\">\r\n              <strong>Required field</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n          <mat-form-field style=\"width: 100%;\">\r\n            <mat-label>Email</mat-label>\r\n            <input autocomplete=\"off\"\r\n                   class=\"user-name\"\r\n                   formControlName=\"email\"\r\n                   matInput\r\n                   placeholder=\"Email\"\r\n                   type=\"text\"/>\r\n            <mat-error *ngIf=\"isControlHasError('email','required')\">\r\n              <strong>Required field</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-md-4\">\r\n          <mat-form-field appearance=\"fill\" style=\"width: 100%;\">\r\n            <mat-label>Date of Birth</mat-label>\r\n            <input\r\n              [matDatepicker]=\"dateOfBirthStr\" formControlName=\"dateOfBirthStr\"\r\n              matInput\r\n            >\r\n            <mat-datepicker-toggle [for]=\"dateOfBirthStr\" matSuffix></mat-datepicker-toggle>\r\n            <mat-datepicker #dateOfBirthStr></mat-datepicker>\r\n          </mat-form-field>\r\n\r\n        </div>\r\n\r\n        <div class=\"col-md-4\">\r\n          <mat-form-field style=\"width: 100%;\">\r\n            <mat-select\r\n              formControlName=\"userType\"\r\n              placeholder=\"User Type\" required>\r\n              <mat-option [value]=\"'ADMIN'\">Admin</mat-option>\r\n              <mat-option [value]=\"'USER'\">User</mat-option>\r\n            </mat-select>\r\n\r\n            <mat-error *ngIf=\"isControlHasError('userType','required')\">\r\n              <strong>Required field</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"col-md-4\">\r\n          <mat-form-field style=\"width: 100%;\">\r\n            <mat-select\r\n              formControlName=\"status\"\r\n              placeholder=\"Status\" required>\r\n              <mat-option [value]=\"'ACT'\">Active</mat-option>\r\n              <mat-option [value]=\"'INA'\">Inactive</mat-option>\r\n            </mat-select>\r\n\r\n            <mat-error *ngIf=\"isControlHasError('status','required')\">\r\n              <strong>Required field</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n      <div *ngIf=\"type === 'ADD'\" class=\"row\">\r\n        <div class=\"col-md-4\">\r\n          <mat-form-field style=\"width: 100%;\">\r\n            <mat-label>Password</mat-label>\r\n            <input autocomplete=\"off\"\r\n                   class=\"first-name\"\r\n                   formControlName=\"password\"\r\n                   matInput\r\n                   placeholder=\"Password\"\r\n                   type=\"password\"/>\r\n            <mat-error *ngIf=\"isControlHasError('password','required')\">\r\n              <strong>Required field</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"col-md-4\">\r\n          <mat-form-field style=\"width: 100%;\">\r\n            <mat-label>Confirm Password</mat-label>\r\n            <input autocomplete=\"off\"\r\n                   class=\"user-name\"\r\n                   formControlName=\"confirmPassword\"\r\n                   matInput\r\n                   placeholder=\"Password\"\r\n                   type=\"password\"/>\r\n            <mat-error *ngIf=\"isControlHasError('confirmPassword','required')\">\r\n              <strong>Required field</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</mat-dialog-content>\r\n\r\n<mat-dialog-actions>\r\n  <div class=\"col-md-12 t-a-e\">\r\n    <ng-container *ngIf=\"type != 'VIEW'\">\r\n      <button\r\n        (click)=\"onSave($event)\"\r\n        [disabled]=\"!isFormValid()\"\r\n        class=\"btn btn-primary\"\r\n        type=\"button\">\r\n        Save\r\n      </button>\r\n    </ng-container>\r\n    <ng-container>\r\n      <button\r\n        (click)=\"onCancelClick($event)\"\r\n        class=\"btn btn-secondary m-l-20\"\r\n        type=\"button\">\r\n        Cancel\r\n      </button>\r\n    </ng-container>\r\n  </div>\r\n</mat-dialog-actions>\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable, Subject} from \"rxjs\";\r\nimport {SETTINGS} from \"../../settings/commons.settings\";\r\nimport {LocalStorage} from \"ngx-webstorage\";\r\nimport {TokenService} from \"./token.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {DataService} from \"../data/data.service\";\r\nimport {ApplicationService} from \"../application/application.service\";\r\nimport {PrivilegeService} from \"./privilege.service\";\r\nimport * as CryptoJS from 'crypto-js';\r\n\r\n// export class LoginRQ {\r\n//   username: string;\r\n//   password: string;\r\n// }\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  private loginStatus = new Subject();\r\n\r\n  @LocalStorage(SETTINGS.PUBLIC_KEY)\r\n  private publicKey: any;\r\n\r\n  constructor(\r\n    private tokenService: TokenService,\r\n    private dataService: DataService,\r\n    private privilegeService: PrivilegeService,\r\n    private applicationService: ApplicationService,\r\n    private router: Router) {\r\n\r\n  }\r\n\r\n  userLogin(logInRequest: any) {\r\n    this.dataService.post(SETTINGS.ENDPOINTS.login, logInRequest)\r\n      .subscribe(\r\n        (res: any) => {\r\n\r\n          this.tokenService.setAccessToken(res.accessToken);\r\n          this.tokenService.setRefreshToken(res.refreshToken);\r\n\r\n          const user = res.user;\r\n          this.applicationService.setLoggedInUser(user);\r\n          this.privilegeService.setUserPrivileges(user.privileges);\r\n\r\n          Promise.all([\r\n            // this.masterDataService.getSystemParameters(),\r\n            // this.masterDataService.getConstants(),\r\n            // this.masterDataService.getApplicationProperties(),\r\n          ]).then(\r\n            () => {\r\n              this.loginStatus.next({status: true});\r\n            }, (error) => {\r\n              console.log('error loading meta data , ', error);\r\n            }\r\n          );\r\n\r\n          // this.searchDataCacheService.resetSearchDataCache();\r\n        }, error => {\r\n          this.loginStatus.next({status: false});\r\n          this.applicationService.setLoggedInUser(null);\r\n        });\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    return !this.tokenService.isAccessTokenExpired() || !this.tokenService.isRefreshTokenExpired();\r\n  }\r\n\r\n  setLoggedOut() {\r\n    this.dataService.post(SETTINGS.ENDPOINTS.expireUserCache)\r\n      .subscribe(data => {\r\n      }, error => {\r\n      });\r\n    this.applicationService.setLoggedInUser(null);\r\n    this.privilegeService.setUserPrivileges([]);\r\n    this.loginStatus.next({status: false});\r\n\r\n    this.router.navigate(['/auth/login/']);\r\n\r\n    // this.dataResetService.resetData();\r\n    localStorage.clear();\r\n    // this.cacheService.expireCache();\r\n    this.tokenService.clearTokens();\r\n  }\r\n\r\n  getLoggedInStatus(): Observable<any> {\r\n    return this.loginStatus.asObservable();\r\n  }\r\n\r\n  getResetPassword(password) {\r\n    password = CryptoJS.SHA1(password);\r\n    return CryptoJS.enc.Base64.stringify(password);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport * as _ from 'underscore';\r\n\r\n@Injectable()\r\nexport class UrlEncodeService {\r\n\r\n  private b64_table = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n  private keyWord = 'K_7$53,~';\r\n\r\n  constructor() {\r\n  }\r\n\r\n  encode(data) {\r\n    data = data + '';\r\n    data = this.xor_encrypt(data);\r\n    return this.b64_encode(data);\r\n  }\r\n\r\n  decode(data) {\r\n    data = this.b64_decode(data);\r\n    return this.xor_decrypt(data);\r\n  }\r\n\r\n  private b64_encode(data) {\r\n    let o1, o2, o3, h1, h2, h3, h4, bits, r, i = 0, enc = \"\";\r\n    if (!data) {\r\n      return data;\r\n    }\r\n    do {\r\n      o1 = data[i++];\r\n      o2 = data[i++];\r\n      o3 = data[i++];\r\n      bits = o1 << 16 | o2 << 8 | o3;\r\n      h1 = bits >> 18 & 0x3f;\r\n      h2 = bits >> 12 & 0x3f;\r\n      h3 = bits >> 6 & 0x3f;\r\n      h4 = bits & 0x3f;\r\n      enc += this.b64_table.charAt(h1) + this.b64_table.charAt(h2) + this.b64_table.charAt(h3) + this.b64_table.charAt(h4);\r\n    } while (i < data.length);\r\n    r = data.length % 3;\r\n    return (r ? enc.slice(0, r - 3) : enc) + \"===\".slice(r || 3);\r\n  }\r\n\r\n  private b64_decode(data) {\r\n    let o1, o2, o3, h1, h2, h3, h4, bits, i = 0, result = [];\r\n    if (!data) {\r\n      return data;\r\n    }\r\n    data += \"\";\r\n    do {\r\n      h1 = this.b64_table.indexOf(data.charAt(i++));\r\n      h2 = this.b64_table.indexOf(data.charAt(i++));\r\n      h3 = this.b64_table.indexOf(data.charAt(i++));\r\n      h4 = this.b64_table.indexOf(data.charAt(i++));\r\n      bits = h1 << 18 | h2 << 12 | h3 << 6 | h4;\r\n      o1 = bits >> 16 & 0xff;\r\n      o2 = bits >> 8 & 0xff;\r\n      o3 = bits & 0xff;\r\n      result.push(o1);\r\n      if (h3 !== 64) {\r\n        result.push(o2);\r\n        if (h4 !== 64) {\r\n          result.push(o3);\r\n        }\r\n      }\r\n    } while (i < data.length);\r\n    return result;\r\n  }\r\n\r\n  private keyCharAt(key, i) {\r\n    return key.charCodeAt(Math.floor(i % key.length));\r\n  }\r\n\r\n  private xor_encrypt(data) {\r\n    let that = this;\r\n    return _.map(data, function (c: string, i) {\r\n      return c.charCodeAt(0) ^ that.keyCharAt(that.keyWord, i);\r\n    });\r\n  }\r\n\r\n  private xor_decrypt(data) {\r\n    let that = this;\r\n    return _.map(data, function (c: any, i) {\r\n      return String.fromCharCode(c ^ that.keyCharAt(that.keyWord, i));\r\n    }).join(\"\");\r\n  }\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AuthService} from '../../../main/service/authentication/auth.service';\r\nimport {PrivilegeService} from '../../../main/service/authentication/privilege.service';\r\nimport {Router} from '@angular/router';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {ApplicationService} from '../../../main/service/application/application.service';\r\nimport {Subscription} from 'rxjs';\r\nimport {ChangePasswordComponent} from '../../../views/pages/home/settings/change-password/change-password.component';\r\nimport {AddUserComponent} from '../../../views/pages/home/users/add-user/add-user.component';\r\nimport {UserService} from '../../../views/pages/home/service/user.service';\r\n\r\n@Component({\r\n  selector: 'app-base',\r\n  templateUrl: './base.component.html',\r\n  styleUrls: ['./base.component.scss']\r\n})\r\nexport class BaseComponent implements OnInit {\r\n  user: any;\r\n  userType: any;\r\n  currentUser: any;\r\n\r\n  workoutsTitle = 'My Workouts';\r\n\r\n  onGetUserByIDSubs = new Subscription();\r\n\r\n  constructor(private authService: AuthService,\r\n              private applicationService: ApplicationService,\r\n              private privilegeService: PrivilegeService,\r\n              private dialog: MatDialog,\r\n              private userService: UserService,\r\n              private router: Router) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.user = this.applicationService.getLoggedInUser();\r\n\r\n    if (this.isAdmin()) {\r\n      this.userType = 'Admin';\r\n      this.workoutsTitle = 'Workouts';\r\n    } else if (this.isUser()) {\r\n      this.userType = 'User';\r\n      this.workoutsTitle = 'My Workouts';\r\n    }\r\n\r\n    this.onGetUserByIDSubs = this.userService.onGetUserByID\r\n      .subscribe(data => {\r\n        if (data) {\r\n          this.currentUser = data;\r\n          if (this.currentUser !== null && this.currentUser !== undefined) {\r\n            this.showUserData();\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    console.log('Logout');\r\n    this.authService.setLoggedOut();\r\n  }\r\n\r\n  onClickHome() {\r\n    this.router.navigate(['/home']);\r\n  }\r\n\r\n  isAdmin() {\r\n    return this.privilegeService.isAdmin();\r\n  }\r\n\r\n  isUser() {\r\n    return this.privilegeService.isUser();\r\n  }\r\n\r\n  onClickChangePassword() {\r\n    const dialogRef = this.dialog.open(ChangePasswordComponent, {\r\n        panelClass: 'custom-dialog-panel',\r\n        width: '40%',\r\n        data: {\r\n          userID: this.user.userID\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  onClickProfile() {\r\n    if (!this.currentUser) {\r\n      this.userService.getUserByID(this.user.userID);\r\n    } else {\r\n      this.showUserData();\r\n    }\r\n  }\r\n\r\n  showUserData() {\r\n    const dialogRef = this.dialog.open(AddUserComponent, {\r\n        panelClass: 'custom-dialog-panel',\r\n        width: '70%',\r\n        data: {\r\n          title: `My Profile`,\r\n          type: 'VIEW',\r\n          user: this.currentUser\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-primary fixed-nav-bar\">\r\n  <div class=\"container-fluid\">\r\n    <a class=\"navbar-brand\" href=\"#/home\">FitnessApp - [{{user.userName}} - {{userType}}]</a>\r\n    <button aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"\r\n            class=\"navbar-toggler\"\r\n            data-bs-target=\"#navbarNavDropdown\" data-bs-toggle=\"collapse\" type=\"button\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse justify-content-end\" id=\"navbarNavDropdown\">\r\n      <ul class=\"navbar-nav\">\r\n        <li class=\"nav-item p-r-30\">\r\n          <a aria-current=\"page\" class=\"nav-link active\" href=\"#/home\">Home</a>\r\n        </li>\r\n        <li class=\"nav-item p-r-30\">\r\n          <a aria-current=\"page\" class=\"nav-link active\" href=\"#/home/calories-calculator\">Calories Calculator</a>\r\n        </li>\r\n        <li class=\"nav-item p-r-30\">\r\n          <a aria-current=\"page\" class=\"nav-link active\" href=\"#/home/my-workouts\">{{workoutsTitle}}</a>\r\n        </li>\r\n        <li class=\"nav-item p-r-30\">\r\n          <a aria-current=\"page\" class=\"nav-link active\" href=\"#/home/exercises\">Exercises</a>\r\n        </li>\r\n        <li *ngIf=\"isAdmin()\" class=\"p-r-30 nav-item\">\r\n          <a class=\"nav-link\" href=\"#/home/users\">Users</a>\r\n        </li>\r\n        <li class=\"nav-item dropdown\">\r\n          <a aria-expanded=\"false\" class=\"nav-link dropdown-toggle\" data-bs-toggle=\"dropdown\" href=\"#\"\r\n             id=\"navbarDropdownMenuLink\" role=\"button\" style=\"padding-right: 70px;\">\r\n            Settings\r\n          </a>\r\n          <ul aria-labelledby=\"navbarDropdownMenuLink\" class=\"dropdown-menu\">\r\n            <li><a (click)=\"onClickProfile()\" class=\"dropdown-item\">Profile</a></li>\r\n            <li><a (click)=\"onClickChangePassword()\" class=\"dropdown-item\">Change Password</a></li>\r\n            <li><a (click)=\"logout()\" class=\"dropdown-item\" href=\"#\">Logout</a></li>\r\n          </ul>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</nav>\r\n\r\n<router-outlet></router-outlet>\r\n\r\n","import {Component, Inject, OnDestroy, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {UserRegisterService} from '../service/user-register.service';\r\nimport {SETTINGS} from '../../../../main/settings/commons.settings';\r\nimport * as moment from 'moment';\r\nimport {Subscription} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit, OnDestroy {\r\n\r\n  registerForm!: FormGroup;\r\n\r\n  onRegisterUserSubs = new Subscription();\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any,\r\n              public dialogRef: MatDialogRef<RegisterComponent>,\r\n              private formBuilder: FormBuilder,\r\n              private userRegisterService: UserRegisterService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initRegisterForm();\r\n\r\n    this.onRegisterUserSubs = this.userRegisterService.onRegisterUser\r\n      .subscribe((data: any) => {\r\n        if (data) {\r\n          if (data.status === 'SUCCESS') {\r\n            alert('User successfully registered to the system');\r\n            this.dialogRef.close(false);\r\n          } else {\r\n            if (data.appsErrorMessages[0].errorCode) {\r\n              alert(data.appsErrorMessages[0].errorCode);\r\n            } else {\r\n              alert('Internal server error');\r\n            }\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  isControlHasError(controlName: string, validationType: string): boolean {\r\n    const control = this.registerForm.controls[controlName];\r\n    if (!control) {\r\n      return false;\r\n    }\r\n\r\n    const result = control.hasError(validationType) && (control.dirty || control.touched);\r\n    return result;\r\n  }\r\n\r\n  onCancelClick($event: MouseEvent) {\r\n    if ($event) {\r\n      $event.stopPropagation();\r\n      $event.preventDefault();\r\n    }\r\n\r\n    this.dialogRef.close(false);\r\n  }\r\n\r\n  onRegister($event: MouseEvent) {\r\n    const submitData = Object.assign({}, this.registerForm.getRawValue());\r\n    const password = submitData.password;\r\n    const confirmPassword = submitData.confirmPassword;\r\n\r\n    if (password !== confirmPassword) {\r\n      alert('Password mismatch');\r\n      return;\r\n    }\r\n\r\n    if (this.validateEmail(submitData.email) == null) {\r\n      alert('Invalid email');\r\n      return;\r\n    }\r\n\r\n    submitData.dateOfBirthStr = moment(submitData.dateOfBirthStr).format(SETTINGS.DATE_TIME.DEFAULT_DATE_FORMAT);\r\n    this.userRegisterService.registerUser(submitData);\r\n  }\r\n\r\n  validateEmail(email) {\r\n    return String(email)\r\n      .toLowerCase()\r\n      .match(\r\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n      );\r\n  }\r\n\r\n  isValidUpload() {\r\n    return this.registerForm.valid;\r\n  }\r\n\r\n  initRegisterForm() {\r\n    this.registerForm = this.formBuilder.group({\r\n      userName: [null, Validators.compose([\r\n        Validators.required\r\n      ])],\r\n      firstName: [null, Validators.compose([\r\n        Validators.required\r\n      ])],\r\n      lastName: [null, Validators.compose([\r\n        Validators.required\r\n      ])],\r\n      email: [null, Validators.compose([\r\n        Validators.required\r\n      ])],\r\n      password: [null, Validators.compose([\r\n        Validators.required\r\n      ])],\r\n      confirmPassword: [null, Validators.compose([\r\n        Validators.required\r\n      ])],\r\n      dateOfBirthStr: [null, Validators.compose([\r\n        Validators.required\r\n      ])]\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.onRegisterUserSubs.unsubscribe();\r\n  }\r\n}\r\n","<div>\r\n  <div class=\"row\">\r\n    <div class=\"col-md-11 height-30px\">\r\n      <h5>User Register</h5>\r\n    </div>\r\n    <div class=\"col-md-1 t-a-e\">\r\n      <button\r\n        (click)=\"onCancelClick($event)\"\r\n        aria-label=\"Close\"\r\n        class=\"btn-close\"\r\n        type=\"button\">\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <hr>\r\n\r\n  <div class=\"row\">\r\n    <form [formGroup]=\"registerForm\" autocomplete=\"off\" class=\"kt-form\" id=\"login-form\" style=\"padding-top: 25px;\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-4\">\r\n          <mat-form-field style=\"width: 100%;\">\r\n            <mat-label>User Name</mat-label>\r\n            <input autocomplete=\"off\"\r\n                   class=\"user-name\"\r\n                   formControlName=\"userName\"\r\n                   matInput\r\n                   placeholder=\"User Name\"\r\n                   type=\"text\"/>\r\n            <mat-error *ngIf=\"isControlHasError('userName','required')\">\r\n              <strong>Required field</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"col-md-4\">\r\n          <mat-form-field style=\"width: 100%;\">\r\n            <mat-label>First Name</mat-label>\r\n            <input autocomplete=\"off\"\r\n                   class=\"first-name\"\r\n                   formControlName=\"firstName\"\r\n                   matInput\r\n                   placeholder=\"First Name\"\r\n                   type=\"text\"/>\r\n            <mat-error *ngIf=\"isControlHasError('firstName','required')\">\r\n              <strong>Required field</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"col-md-4\">\r\n          <mat-form-field style=\"width: 100%;\">\r\n            <mat-label>Last Name</mat-label>\r\n            <input autocomplete=\"off\"\r\n                   class=\"user-name\"\r\n                   formControlName=\"lastName\"\r\n                   matInput\r\n                   placeholder=\"Last Name\"\r\n                   type=\"text\"/>\r\n            <mat-error *ngIf=\"isControlHasError('lastName','required')\">\r\n              <strong>Required field</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-md-4\">\r\n          <mat-form-field style=\"width: 100%;\">\r\n            <mat-label>Email</mat-label>\r\n            <input autocomplete=\"off\"\r\n                   class=\"user-name\"\r\n                   formControlName=\"email\"\r\n                   matInput\r\n                   placeholder=\"Email\"\r\n                   type=\"text\"/>\r\n            <mat-error *ngIf=\"isControlHasError('email','required')\">\r\n              <strong>Required field</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"col-md-4\">\r\n          <mat-form-field style=\"width: 100%;\">\r\n            <mat-label>Password</mat-label>\r\n            <input autocomplete=\"off\"\r\n                   class=\"first-name\"\r\n                   formControlName=\"password\"\r\n                   matInput\r\n                   placeholder=\"Password\"\r\n                   type=\"password\"/>\r\n            <mat-error *ngIf=\"isControlHasError('password','required')\">\r\n              <strong>Required field</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"col-md-4\">\r\n          <mat-form-field style=\"width: 100%;\">\r\n            <mat-label>Confirm Password</mat-label>\r\n            <input autocomplete=\"off\"\r\n                   class=\"user-name\"\r\n                   formControlName=\"confirmPassword\"\r\n                   matInput\r\n                   placeholder=\"Password\"\r\n                   type=\"password\"/>\r\n            <mat-error *ngIf=\"isControlHasError('confirmPassword','required')\">\r\n              <strong>Required field</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-md-4\">\r\n          <mat-form-field appearance=\"fill\" style=\"width: 100%;\">\r\n            <mat-label>Date of Birth</mat-label>\r\n            <input\r\n              matInput [matDatepicker]=\"picker\"\r\n              formControlName=\"dateOfBirthStr\"\r\n            >\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #picker></mat-datepicker>\r\n          </mat-form-field>\r\n\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n\r\n  <hr>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12 t-a-e\">\r\n      <button\r\n        (click)=\"onRegister($event)\"\r\n        [disabled]=\"!isValidUpload()\"\r\n        class=\"btn btn-primary\"\r\n        type=\"button\">\r\n        Register\r\n      </button>\r\n      <button\r\n        (click)=\"onCancelClick($event)\"\r\n        class=\"btn btn-secondary m-l-20\"\r\n        type=\"button\">\r\n        Cancel\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.scss']\r\n})\r\nexport class AuthComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div>\r\n  <div>\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\r\nimport {MaterialImports} from \"./material.imports\";\r\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\r\nimport {RouterModule} from \"@angular/router\";\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    MaterialImports,\r\n    ReactiveFormsModule,\r\n    NgbModule\r\n  ],\r\n  exports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    MaterialImports,\r\n    RouterModule,\r\n    ReactiveFormsModule,\r\n    NgbModule\r\n  ]\r\n})\r\nexport class SharedModule {\r\n}\r\n","import {Component, Inject, OnDestroy, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {UserService} from \"../../service/user.service\";\r\nimport {Subscription} from \"rxjs\";\r\nimport {AuthService} from \"../../../../../main/service/authentication/auth.service\";\r\nimport {SETTINGS} from \"../../../../../main/settings/commons.settings\";\r\nimport {AlertService} from \"../../../../../main/service/common/alert.service\";\r\n\r\n@Component({\r\n  selector: 'app-change-password',\r\n  templateUrl: './change-password.component.html',\r\n  styleUrls: ['./change-password.component.scss']\r\n})\r\nexport class ChangePasswordComponent implements OnInit, OnDestroy {\r\n\r\n  passwordChangeForm!: FormGroup;\r\n  userID: any;\r\n  onChangeUserPasswordSubs = new Subscription();\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any,\r\n              public dialogRef: MatDialogRef<ChangePasswordComponent>,\r\n              private formBuilder: FormBuilder,\r\n              private authService: AuthService,\r\n              private alertService: AlertService,\r\n              private userService: UserService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.userID = this.data.userID;\r\n    this.initForm();\r\n\r\n    this.onChangeUserPasswordSubs = this.userService.onChangeUserPassword\r\n      .subscribe(data => {\r\n        if (data) {\r\n          this.alertService.showToaster(\r\n            \"Password changed successfully\",\r\n            SETTINGS.TOASTER_MESSAGES.success);\r\n          this.dialogRef.close(false);\r\n        }\r\n      });\r\n  }\r\n\r\n  initForm() {\r\n    this.passwordChangeForm = this.formBuilder.group({\r\n      oldPassword: [null, Validators.compose([\r\n        Validators.required\r\n      ])],\r\n      newPassword: [null, Validators.compose([\r\n        Validators.required\r\n      ])]\r\n    });\r\n  }\r\n\r\n  isControlHasError(controlName: string, validationType: string): boolean {\r\n    const control = this.passwordChangeForm.controls[controlName];\r\n    if (!control) {\r\n      return false;\r\n    }\r\n\r\n    const result = control.hasError(validationType) && (control.dirty || control.touched);\r\n    return result;\r\n  }\r\n\r\n  onCancelClick($event: MouseEvent) {\r\n    if ($event) {\r\n      $event.stopPropagation();\r\n      $event.preventDefault();\r\n    }\r\n\r\n    this.dialogRef.close(false);\r\n  }\r\n\r\n  onChangePassword($event: MouseEvent) {\r\n    if ($event) {\r\n      $event.stopPropagation();\r\n      $event.preventDefault();\r\n    }\r\n\r\n    let submitData = Object.assign({}, this.passwordChangeForm.getRawValue());\r\n    submitData.userID = this.userID;\r\n    submitData.oldPassword = this.authService.getResetPassword(submitData.oldPassword);\r\n\r\n    this.userService.changeUserPassword(submitData);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.onChangeUserPasswordSubs.unsubscribe();\r\n  }\r\n\r\n  isFormValid() {\r\n    return this.passwordChangeForm.valid;\r\n  }\r\n}\r\n","<div>\r\n  <div class=\"row\">\r\n    <div class=\"col-md-11 height-30px\">\r\n      <h5>Change Password</h5>\r\n    </div>\r\n    <div class=\"col-md-1 t-a-e\">\r\n      <button\r\n        (click)=\"onCancelClick($event)\"\r\n        aria-label=\"Close\"\r\n        class=\"btn-close\"\r\n        type=\"button\">\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <form [formGroup]=\"passwordChangeForm\" autocomplete=\"off\" class=\"kt-form\" id=\"login-form\"\r\n          style=\"padding-top: 25px;\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n          <mat-form-field style=\"width: 100%;\">\r\n            <mat-label>Current Password</mat-label>\r\n            <input autocomplete=\"off\"\r\n                   class=\"first-name\"\r\n                   formControlName=\"oldPassword\"\r\n                   matInput\r\n                   placeholder=\"Current Password\"\r\n                   type=\"password\"/>\r\n            <mat-error *ngIf=\"isControlHasError('oldPassword','required')\">\r\n              <strong>Required field</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"col-md-6\">\r\n          <mat-form-field style=\"width: 100%;\">\r\n            <mat-label>New Password</mat-label>\r\n            <input autocomplete=\"off\"\r\n                   class=\"user-name\"\r\n                   formControlName=\"newPassword\"\r\n                   matInput\r\n                   placeholder=\"New Password\"\r\n                   type=\"password\"/>\r\n            <mat-error *ngIf=\"isControlHasError('newPassword','required')\">\r\n              <strong>Required field</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12 t-a-e\">\r\n      <button\r\n        (click)=\"onChangePassword($event)\"\r\n        [disabled]=\"!isFormValid()\"\r\n        class=\"btn btn-primary\"\r\n        type=\"button\">\r\n        Change\r\n      </button>\r\n      <button\r\n        (click)=\"onCancelClick($event)\"\r\n        class=\"btn btn-secondary m-l-20\"\r\n        type=\"button\">\r\n        Cancel\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import {ModuleWithProviders, NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {AuthComponent} from \"./auth.component\";\r\nimport {LoginComponent} from \"./login/login.component\";\r\nimport {SharedModule} from \"../../../shared/shared.module\";\r\nimport {UserRegisterService} from \"./service/user-register.service\";\r\nimport {UserService} from \"../home/service/user.service\";\r\nimport { RegisterComponent } from './register/register.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AuthComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'login',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path: 'login',\r\n        component: LoginComponent,\r\n        data: {returnUrl: window.location.pathname}\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent,\r\n    AuthComponent,\r\n    RegisterComponent\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [AuthComponent],\r\n  providers: [\r\n    UserRegisterService,\r\n    UserService\r\n  ]\r\n})\r\nexport class AuthModule {\r\n  // @ts-ignore\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: AuthModule\r\n    };\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'FitnessApp';\r\n}\r\n","<router-outlet></router-outlet>\r\n","import {Injectable} from '@angular/core';\r\nimport * as moment from 'moment';\r\nimport {Moment} from 'moment';\r\n\r\n@Injectable()\r\nexport class DateService {\r\n\r\n  private defaultDateFormat = 'DD/MM/YYYY';\r\n  private defaultDateTimeFormat = 'DD/MM/YYYY HH:mm';\r\n\r\n  constructor() {\r\n  }\r\n\r\n  getDefaultFormattedDate(date: Moment): string {\r\n    return moment(date).format(this.defaultDateFormat);\r\n  }\r\n\r\n  getDefaultFormattedDateTime(date: Moment): string {\r\n    return moment(date).format(this.defaultDateTimeFormat);\r\n  }\r\n\r\n  getMomentDateFromDateStr(dateStr: string) {\r\n    return moment(dateStr, this.defaultDateFormat);\r\n  }\r\n\r\n  getMonthStartDateStr(date: Moment): string {\r\n    return moment(date).startOf('month').format(this.defaultDateFormat);\r\n  }\r\n\r\n  getMonthEndDateStr(date: Moment): string {\r\n    return moment(date).endOf('month').format(this.defaultDateFormat);\r\n  }\r\n\r\n  getJsDate(date: string) {\r\n    return this.getMomentDateFromDateStr(date).toDate();\r\n  }\r\n\r\n  getJSDateDifference(date1: Date, date2: Date) {\r\n    return moment(date2).diff(moment(date1), 'days');\r\n  }\r\n\r\n  getMomentDateFromJSDate(date: Date) {\r\n    return moment(date);\r\n  }\r\n\r\n  getNow(): Moment {\r\n    return moment();\r\n  }\r\n\r\n  isSameOrBefore(fromDate: string, toDate: string) {\r\n    return this.getMomentDateFromDateStr(fromDate).isSameOrBefore(this.getMomentDateFromDateStr(toDate));\r\n  }\r\n\r\n  isSame(fromDate: string, toDate: string) {\r\n    return this.getMomentDateFromDateStr(fromDate).isSame(this.getMomentDateFromDateStr(toDate));\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Router} from '@angular/router';\r\nimport {Observable} from 'rxjs/index';\r\nimport {ErrorObservable} from 'rxjs-compat/observable/ErrorObservable';\r\nimport {CommonService} from '../common/common.service';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/observable/throw';\r\nimport 'rxjs/add/observable/fromPromise';\r\nimport 'rxjs/add/operator/do';\r\nimport 'rxjs/add/operator/retry';\r\nimport {Pagination} from '../../dto/pagination';\r\nimport * as _ from 'underscore';\r\nimport {SETTINGS} from '../../settings/commons.settings';\r\nimport {AlertService} from '../common/alert.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n\r\n  constructor(private httpClient: HttpClient,\r\n              private commons: CommonService,\r\n              private alertService: AlertService,\r\n              private router: Router) {\r\n  }\r\n\r\n  public get(conf: any, data?: Object): Observable<Object> {\r\n    return this.request(conf.url, {method: 'GET'}, data, conf.headerParam)\r\n      .map(response => {\r\n        return this.responseHandler(response);\r\n      });\r\n  }\r\n\r\n  public post(conf: any, data?: Object): Observable<Object> {\r\n    return this.request(conf.url, {method: 'POST'}, data, conf.headerParam)\r\n      .map(response => {\r\n        return this.responseHandler(response);\r\n      });\r\n  }\r\n\r\n  private request(url: string, options: any, data?: Object, headerParams?: any): Observable<any> {\r\n    options.headers = {};\r\n    let showToaster = false;\r\n    let excludeList: any = [];\r\n\r\n    if (!!headerParams) {\r\n      if (headerParams.showLoading) {\r\n        this.commons.showLoading();\r\n      }\r\n      if (headerParams.showToast && headerParams.showToast === true) {\r\n        showToaster = true;\r\n      }\r\n      const excludeErrorHeader = headerParams.excludeError;\r\n      if (excludeErrorHeader) {\r\n        excludeList = excludeErrorHeader;\r\n      }\r\n    }\r\n\r\n    if (headerParams.isFileUpload) {\r\n      options.body = data;\r\n    } else if (headerParams.isFileDownload) {\r\n      options.responseType = 'blob';\r\n    } else {\r\n      if (\r\n        options.method === 'POST' ||\r\n        options.method === 'DELETE') {\r\n        options.headers['Content-Type'] = 'application/json';\r\n      }\r\n\r\n      if (data) {\r\n        options.body = JSON.stringify(data);\r\n      }\r\n    }\r\n\r\n    options.withCredentials = !headerParams.skipAuth;\r\n\r\n    // console.log(options.method);\r\n    // console.log(url);\r\n    // console.log(options);\r\n\r\n    return this.httpClient.request(options.method, url, options).catch(error => {\r\n      this.handleError(error, showToaster, excludeList);\r\n      return ErrorObservable.create('error');\r\n    });\r\n  }\r\n\r\n  private handleError(error: any, showToaster: any, excludeList: any): void {\r\n    // if (showToaster) {\r\n    if (error.status === 401 && excludeList.indexOf(401) == -1) {\r\n      alert('401 Error');\r\n    } else if (error.status === 403 && excludeList.indexOf(403) == -1) {\r\n      // alert(\"Your session is expired\");\r\n      // this.router.navigate(['/auth/login']);\r\n    } else if (error.status === 500 && excludeList.indexOf(500) == -1) {\r\n      this.alertService.showToaster(\r\n        'Please contact system administrator',\r\n        SETTINGS.TOASTER_MESSAGES.error);\r\n    } else if ((error.status === 504 || error.status === 404) && excludeList.indexOf(504) === -1 && excludeList.indexOf(404) === -1) {\r\n      alert('Not found');\r\n      // this.router.navigate(['/auth/login']);\r\n    }\r\n    // }\r\n    // this.commons.resetLoading();\r\n    // this.commons.onApiError();\r\n  }\r\n\r\n  private responseHandler(response: any): any {\r\n    this.commons.hideLoading();\r\n\r\n    if (response.status == 'FAILED' || response.status == 'PARTIAL_SUCCESS') {\r\n      this.commons.resetLoading();\r\n      this.showErrorMessage(response);\r\n      this.commons.onApiError();\r\n      throw response;\r\n    } else {\r\n\r\n    }\r\n    if (!response.result) {\r\n      return response;\r\n    }\r\n    return response.result;\r\n  }\r\n\r\n  private showErrorMessage(response: any) {\r\n    const finalMessage = [];\r\n\r\n    response.appsErrorMessages.forEach((error) => {\r\n      if (error != null && error.errorCode != null) {\r\n        finalMessage.push(error.errorCode);\r\n      }\r\n    });\r\n\r\n    if (finalMessage.length > 0) {\r\n      this.alertService.showToaster(\r\n        finalMessage[0],\r\n        SETTINGS.TOASTER_MESSAGES.error);\r\n    } else {\r\n      this.alertService.showToaster(\r\n        'Please contact system administrator',\r\n        SETTINGS.TOASTER_MESSAGES.error);\r\n    }\r\n  }\r\n\r\n  public postWithPageData(conf: any, searchData?: Object, pagination?: Pagination): Observable<Object> {\r\n    if (_.isEmpty(pagination)) {\r\n      pagination = new Pagination();\r\n    }\r\n\r\n    if (_.isEmpty(searchData)) {\r\n      searchData = {};\r\n    }\r\n\r\n    for (const key in searchData) {\r\n      if (searchData.hasOwnProperty(key)) {\r\n        if (!_.isNumber(searchData[key])) {\r\n          _.isEmpty(searchData[key]) ? searchData[key] = null : '';\r\n        }\r\n      }\r\n    }\r\n\r\n    const data = Object.assign({}, searchData, pagination.getPageData());\r\n\r\n    return this.post(conf, data);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {DataService} from '../../../../main/service/data/data.service';\r\nimport {ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\r\nimport {Observable} from 'rxjs/index';\r\nimport {SETTINGS} from '../../../../main/settings/commons.settings';\r\nimport {BehaviorSubject, Subject} from 'rxjs';\r\nimport {Pagination} from '../../../../main/dto/pagination';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n\r\n  selectedUser: any;\r\n  onChangeUserPassword: Subject<any> = new Subject();\r\n  searchedUsers: any;\r\n  onSearchedUsers: Subject<any> = new Subject();\r\n  onSaveOrUpdateUser: Subject<any> = new Subject();\r\n  onResetUserPassword: Subject<any> = new Subject();\r\n  onGetUserByID: Subject<any> = new Subject();\r\n\r\n  constructor(private dataService: DataService) {\r\n  }\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any {\r\n\r\n    return new Promise<void>((resolve, reject) => {\r\n\r\n      Promise.all([\r\n        this.searchUsers({}),\r\n      ]).then(\r\n        () => {\r\n          resolve();\r\n        },\r\n        reject\r\n      );\r\n    });\r\n  }\r\n\r\n  searchUsers(searchRQ) {\r\n    this.dataService.post(SETTINGS.ENDPOINTS.searchUsers, searchRQ)\r\n      .subscribe(response => {\r\n        this.searchedUsers = response;\r\n        this.onSearchedUsers.next(this.searchedUsers);\r\n      });\r\n  }\r\n\r\n  saveOrUpdateUser(userRQ: any) {\r\n    const response = this.dataService.post(SETTINGS.ENDPOINTS.saveOrUpdateUser, userRQ);\r\n    response.subscribe((data: any) => {\r\n      this.onSaveOrUpdateUser.next(data);\r\n    });\r\n  }\r\n\r\n  resetUserPassword(userID) {\r\n    const data = Object.assign({}, SETTINGS.ENDPOINTS.resetUserPassword);\r\n    data.url = data.url + '/' + userID;\r\n\r\n    this.dataService.get(data)\r\n      .subscribe((response: any) => {\r\n        this.onResetUserPassword.next(response);\r\n      });\r\n  }\r\n\r\n  changeUserPassword(saveRQ) {\r\n    this.dataService.post(SETTINGS.ENDPOINTS.changeUserPassword, saveRQ)\r\n      .subscribe(response => {\r\n        this.selectedUser = response;\r\n        this.onChangeUserPassword.next(this.selectedUser);\r\n      });\r\n  }\r\n\r\n  getUserByID(userID) {\r\n    const data = Object.assign({}, SETTINGS.ENDPOINTS.getUserByID);\r\n    data.url = data.url + '/' + userID;\r\n\r\n    this.dataService.get(data)\r\n      .subscribe((response: any) => {\r\n        this.onGetUserByID.next(response);\r\n      });\r\n  }\r\n}\r\n","export class Constants {\r\n  public static privilegeCodes = {\r\n    ADMIN_DEFAULT_PRIVILEGE: 'ADMIN.DEFAULT.PRIVILEGE',\r\n    USER_DEFAULT_PRIVILEGE: 'USER.DEFAULT.PRIVILEGE'\r\n  };\r\n\r\n  public static status = {\r\n    ACT: 'Active',\r\n    INA: 'Inactive'\r\n  };\r\n\r\n  public static gender = {\r\n    F: 'Female',\r\n    M: 'Male'\r\n  };\r\n\r\n  public static userType = {\r\n    ADMIN: 'Admin',\r\n    USER: 'User'\r\n  };\r\n\r\n  public static yesNo = {\r\n    Y: 'Yes',\r\n    N: 'No'\r\n  };\r\n\r\n  public static descriptionTypes = {\r\n    DESCRIPTION: 'Description',\r\n    BRAND: 'Brand',\r\n    MODEL: 'Model',\r\n    SPECIFICATIONS: 'Specifications'\r\n  };\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {HTTP_INTERCEPTORS, HttpClientModule} from \"@angular/common/http\";\r\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\r\nimport {TokenInterceptor} from \"./service/interceptors/token-interceptor\";\r\nimport {DataService} from \"./service/data/data.service\";\r\nimport {CommonService} from \"./service/common/common.service\";\r\nimport {ApplicationService} from \"./service/application/application.service\";\r\nimport {EncryptionService} from \"./service/application/encryption.service\";\r\nimport {TokenService} from \"./service/authentication/token.service\";\r\nimport {PrivilegeService} from \"./service/authentication/privilege.service\";\r\nimport {DateService} from \"./service/application/date.service\";\r\nimport {AuthService} from \"./service/authentication/auth.service\";\r\nimport {AuthGuard} from \"./guard/auth-guard\";\r\nimport {UrlEncodeService} from \"./service/application/url-encode.service\";\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n  ],\r\n  exports: [\r\n    BrowserAnimationsModule\r\n  ],\r\n  providers: [\r\n    DataService,\r\n    CommonService,\r\n    ApplicationService,\r\n    EncryptionService,\r\n    AuthService,\r\n    UrlEncodeService,\r\n    TokenService,\r\n    AuthGuard,\r\n    DateService,\r\n    PrivilegeService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: TokenInterceptor,\r\n      multi: true\r\n    },\r\n  ],\r\n})\r\nexport class MainModule {\r\n}\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {AppComponent} from './app.component';\r\nimport {BaseComponent} from './core/fitness-app/base/base.component';\r\nimport {MainModule} from \"./main/main.module\";\r\nimport {HashLocationStrategy, LocationStrategy} from \"@angular/common\";\r\nimport {SharedModule} from \"./shared/shared.module\";\r\nimport {AuthModule} from \"./views/pages/auth/auth.module\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    BaseComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    MainModule,\r\n    SharedModule,\r\n    AppRoutingModule,\r\n    AuthModule.forRoot(),\r\n  ],\r\n  providers: [\r\n    {provide: LocationStrategy, useClass: HashLocationStrategy}\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {LocalStorage} from \"ngx-webstorage\";\r\nimport {SETTINGS} from \"../../settings/commons.settings\";\r\nimport {DataService} from \"../data/data.service\";\r\nimport {EncryptionService} from \"./encryption.service\";\r\nimport * as _ from 'underscore';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApplicationService {\r\n\r\n  @LocalStorage(SETTINGS.LOGGED_USER_ENC)\r\n  private loggedInUserEncrypted!: string;\r\n\r\n  private loggedInUserDecrypted: any;\r\n\r\n  @LocalStorage(SETTINGS.PUBLIC_KEY)\r\n  private publicKey: any;\r\n\r\n  constructor(private dataService: DataService,\r\n              private encryptionService: EncryptionService) {\r\n    if (!_.isEmpty(this.loggedInUserEncrypted)) {\r\n      this.loggedInUserDecrypted = this.getDecryptedUser(this.loggedInUserEncrypted);\r\n    } else {\r\n      this.loggedInUserDecrypted = {};\r\n    }\r\n  }\r\n\r\n  loadPublicKey() {\r\n    let loadPublicKeyObserving = this.dataService.get(SETTINGS.ENDPOINTS.loadPublicKey);\r\n    loadPublicKeyObserving.subscribe((response: any) => {\r\n      this.publicKey = response.publicKey;\r\n    });\r\n    return loadPublicKeyObserving;\r\n  }\r\n\r\n  setLoggedInUser(user: any) {\r\n    if (user != null) {\r\n      this.loggedInUserEncrypted = this.getEncryptedUser(user);\r\n      this.loggedInUserDecrypted = this.getDecryptedUser(this.loggedInUserEncrypted);\r\n    } else {\r\n      this.loggedInUserEncrypted = '';\r\n      this.loggedInUserDecrypted = {};\r\n    }\r\n  }\r\n\r\n  private getDecryptedUser(user: any) {\r\n    return JSON.parse(this.encryptionService.decrypt(user));\r\n  }\r\n\r\n  private getEncryptedUser(user: any): string {\r\n    return this.encryptionService.encrypt(JSON.stringify(user));\r\n  }\r\n\r\n  getLoggedInUser() {\r\n    return this.loggedInUserDecrypted;\r\n  }\r\n}\r\n","import {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\r\nimport {Observable} from 'rxjs/index';\r\nimport {switchMap} from 'rxjs/operators';\r\nimport {Injectable} from '@angular/core';\r\nimport {TokenService} from \"../authentication/token.service\";\r\nimport {DataService} from \"../data/data.service\";\r\nimport {SETTINGS} from \"../../settings/commons.settings\";\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private tokenService: TokenService,\r\n              private dataService: DataService) {\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    let request;\r\n    if (req.withCredentials) {\r\n\r\n      if (req.url.indexOf(SETTINGS.ENDPOINTS.refreshToken.url) > -1) {\r\n        request = req.clone({\r\n          setHeaders: {\r\n            'Authorization': 'Bearer ' + this.tokenService.getRefreshToken()\r\n          }\r\n        });\r\n        return next.handle(request);\r\n      } else {\r\n        if (!this.tokenService.isAccessTokenExpired()) {\r\n          request = req.clone({\r\n            setHeaders: {\r\n              'Authorization': 'Bearer ' + this.tokenService.getAccessToken()\r\n            }\r\n          });\r\n          return next.handle(request);\r\n        } else {\r\n          console.log(req.url);\r\n          if (!this.tokenService.isRefreshTokenExpired()) {\r\n            return this.dataService.post(SETTINGS.ENDPOINTS.refreshToken).pipe(switchMap((response: any) => {\r\n\r\n              this.tokenService.setAccessToken(response.token);\r\n              request = req.clone({\r\n                setHeaders: {\r\n                  'Authorization': 'Bearer ' + this.tokenService.getAccessToken()\r\n                }\r\n              });\r\n              return next.handle(request);\r\n            }));\r\n          }\r\n          return next.handle(request);\r\n        }\r\n      }\r\n    } else {\r\n      request = req;\r\n      return next.handle(request);\r\n    }\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {SETTINGS} from '../../settings/commons.settings';\r\nimport {EncryptionService} from '../application/encryption.service';\r\nimport {LocalStorage} from 'ngx-webstorage';\r\nimport * as _ from 'underscore';\r\nimport {Constants} from '../../settings/constants';\r\n\r\n@Injectable()\r\nexport class PrivilegeService {\r\n\r\n  @LocalStorage(SETTINGS.USER_PRIVILEGES)\r\n  private userPrivilegesEncStr: string;\r\n\r\n  adminPrivilege = Constants.privilegeCodes.ADMIN_DEFAULT_PRIVILEGE;\r\n  usersPrivilege = Constants.privilegeCodes.USER_DEFAULT_PRIVILEGE;\r\n\r\n  private userPrivileges: Array<string> = [];\r\n\r\n  constructor(private encryptionService: EncryptionService) {\r\n    if (!_.isEmpty(this.userPrivilegesEncStr)) {\r\n      this.decryptPrivileges();\r\n    }\r\n  }\r\n\r\n  setUserPrivileges(userPrivileges: Array<string>) {\r\n    this.userPrivilegesEncStr = this.encryptionService.encrypt(JSON.stringify(userPrivileges));\r\n    this.decryptPrivileges();\r\n  }\r\n\r\n  hasPrivilege(privilegeCode: string): boolean {\r\n    return _.contains(this.userPrivileges, privilegeCode);\r\n  }\r\n\r\n  hasAnyPrivilege(privilegeCodes: Array<string>): boolean {\r\n    let hasAnyPrivilege = false;\r\n\r\n    for (let i = 0; i < privilegeCodes.length; i++) {\r\n      if (this.hasPrivilege(privilegeCodes[i])) {\r\n        hasAnyPrivilege = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    return hasAnyPrivilege;\r\n  }\r\n\r\n  private decryptPrivileges() {\r\n    this.userPrivileges = JSON.parse(this.encryptionService.decrypt(this.userPrivilegesEncStr));\r\n  }\r\n\r\n  isAdmin() {\r\n    return this.hasPrivilege(this.adminPrivilege);\r\n  };\r\n\r\n  isUser() {\r\n    return this.hasPrivilege(this.usersPrivilege);\r\n  };\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport * as CryptoJS from 'crypto-js';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EncryptionService {\r\n\r\n  private secretKey = 'Eo8(]<Z%`+';\r\n\r\n  constructor() {\r\n  }\r\n\r\n  encrypt(field: any): string {\r\n    return CryptoJS.AES.encrypt(field, this.secretKey).toString();\r\n  }\r\n\r\n  decrypt(cypherStr: string): string {\r\n    let bytes = CryptoJS.AES.decrypt(cypherStr.toString(), this.secretKey);\r\n    return bytes.toString(CryptoJS.enc.Utf8);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {SETTINGS} from \"../../settings/commons.settings\";\r\nimport {JwtHelperService} from \"@auth0/angular-jwt\";\r\nimport * as CryptoJS from 'crypto-js';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenService {\r\n\r\n  private accessToken;\r\n\r\n  private refreshToken;\r\n\r\n  private jwtHelper;\r\n\r\n  constructor() {\r\n    this.jwtHelper = new JwtHelperService();\r\n    this.accessToken = null;\r\n    this.refreshToken = null;\r\n    let accessTokenEnc = localStorage.getItem(SETTINGS.ACCESS_TOKEN);\r\n    let refreshTokenEnc = localStorage.getItem(SETTINGS.ACCESS_TOKEN);\r\n\r\n    if (accessTokenEnc) {\r\n      this.accessToken = CryptoJS.AES.decrypt(accessTokenEnc, SETTINGS.KEYS.SECRET).toString(CryptoJS.enc.Utf8);\r\n    }\r\n\r\n    if (refreshTokenEnc) {\r\n      this.refreshToken = CryptoJS.AES.decrypt(refreshTokenEnc, SETTINGS.KEYS.SECRET).toString(CryptoJS.enc.Utf8);\r\n    }\r\n  }\r\n\r\n  setAccessToken(accessToken: string) {\r\n    localStorage.setItem(SETTINGS.ACCESS_TOKEN, CryptoJS.AES.encrypt(accessToken, SETTINGS.KEYS.SECRET).toString());\r\n    this.accessToken = accessToken;\r\n  }\r\n\r\n  setRefreshToken(refreshToken: string) {\r\n    localStorage.setItem(SETTINGS.REFRESH_TOKEN, CryptoJS.AES.encrypt(refreshToken, SETTINGS.KEYS.SECRET).toString());\r\n    this.refreshToken = refreshToken;\r\n  }\r\n\r\n  getAccessToken() {\r\n    return this.accessToken;\r\n  }\r\n\r\n  getRefreshToken() {\r\n    return this.refreshToken;\r\n  }\r\n\r\n  isAccessTokenExpired() {\r\n    if (this.accessToken) {\r\n      return this.jwtHelper.isTokenExpired(this.accessToken);\r\n    }\r\n    return true;\r\n  }\r\n\r\n  isRefreshTokenExpired() {\r\n    if (this.refreshToken) {\r\n      return this.jwtHelper.isTokenExpired(this.refreshToken);\r\n    }\r\n    return true;\r\n  }\r\n\r\n  clearTokens() {\r\n    this.accessToken = null;\r\n    this.refreshToken = null;\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {PreloadAllModules, RouterModule, Routes} from '@angular/router';\r\nimport {BaseComponent} from './core/fitness-app/base/base.component';\r\nimport {AuthGuard} from './main/guard/auth-guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'auth',\r\n    loadChildren: () => import('src/app/views/pages/auth/auth.module').then(m => m.AuthModule)\r\n  },\r\n\r\n  {\r\n    path: '',\r\n    component: BaseComponent,\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      {\r\n        path: 'home',\r\n        loadChildren: () => import('src/app/views/pages/home/home.module').then(m => m.HomeModule)\r\n      },\r\n\r\n      {path: '', redirectTo: 'home', pathMatch: 'full'},\r\n      {path: '**', redirectTo: 'home', pathMatch: 'full'}\r\n    ],\r\n    resolve: {\r\n      // data: CalenderService\r\n\r\n    },\r\n  },\r\n\r\n  {path: '**', redirectTo: 'home'},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {preloadingStrategy: PreloadAllModules})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","export class Pagination {\r\n\r\n  pageIndex: number;\r\n  pageSize: number;\r\n\r\n  constructor(pagination?) {\r\n    pagination = pagination || {};\r\n    this.pageSize = pagination.pageSize || 10;\r\n    this.pageIndex = (pagination.pageIndex + 1) || 1;\r\n  }\r\n\r\n  getPageData() {\r\n    return {\r\n      page: this.pageIndex,\r\n      rows: this.pageSize\r\n    };\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable, Subject} from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommonService {\r\n\r\n  onError: Subject<any> = new Subject();\r\n  private loading = new Subject<any>();\r\n  private showLoadingCount = 0;\r\n  private hideLoadingCount = 0;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  public showLoading() {\r\n    this.showLoadingCount++;\r\n    this.loading.next({status: true});\r\n  }\r\n\r\n  public hideLoading() {\r\n    this.hideLoadingCount++;\r\n    if (this.showLoadingCount <= this.hideLoadingCount) {\r\n      this.showLoadingCount = 0;\r\n      this.hideLoadingCount = 0;\r\n\r\n      this.loading.next({status: false});\r\n    }\r\n  }\r\n\r\n  public resetLoading() {\r\n    this.showLoadingCount = 0;\r\n    this.hideLoadingCount = 0;\r\n    this.loading.next({status: false});\r\n  }\r\n\r\n  public getLoadingStatus(): Observable<any> {\r\n    return this.loading.asObservable();\r\n  }\r\n\r\n  public onApiError() {\r\n    this.onError.next(true);\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","export class SETTINGS {\r\n\r\n  public static PUBLIC_KEY = 'Rt5Wx%4d';\r\n  public static ACCESS_TOKEN = 'Eop_ubF';\r\n  public static REFRESH_TOKEN = 'Xer_09s';\r\n  public static LOGGED_USER_ENC = 'Zedij7&';\r\n  public static USER_PRIVILEGES = 'C4d4%rd';\r\n  public static DATE_FORMAT = 'DD/MM/YYYY';\r\n  public static DATE_TIME_FORMAT = 'DD/MM/YYYY HH:mm';\r\n\r\n  public static DATE_TIME = {\r\n    DEFAULT_DATE_FORMAT: 'DD/MM/YYYY',\r\n    DEFAULT_DATE_TIME_FORMAT: 'DD/MM/YYYY HH:mm',\r\n  };\r\n\r\n  public static UPLOAD_IMAGE_SIZE_MAX_MB = 25;\r\n  public static UPLOAD_IMAGE_ALLOWED_EXTENSIONS = ['jpg', 'png', 'jpeg'];\r\n\r\n  public static TEST_SYSTEM = 'N';\r\n  public static TEST_SYSTEM_DISPLAY_NAME = 'Demo';\r\n\r\n  public static TOASTER_MESSAGES = {\r\n    success: 'SUCCESS',\r\n    error: 'ERROR',\r\n    warning: 'WARNING',\r\n    info: 'INFO',\r\n    custom: 'CUSTOM'\r\n  };\r\n\r\n  public static PAGES = {\r\n    home: '/home'\r\n  };\r\n\r\n  public static KEYS = {\r\n    PUBLIC_KEY:\r\n      '-----BEGIN PUBLIC KEY-----\\n' +\r\n      'MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDO/pdXiY1LBBjVARZ5QAejI3id\\n' +\r\n      'ZZEDHW26zNaJnjffCobZPW16ArQTeM/pmWJ34FDgL+4Ev395pwlfmcLnBmRV6yTh\\n' +\r\n      'ur5yqZuVSYWQGFOG8VL5+R0yVFJMCF3UvHJpsXxBpmfHMOqg/08KXUxDSmJKmqsS\\n' +\r\n      'mn6rrbleupj0hci5OQIDAQAB' +\r\n      '-----END PUBLIC KEY-----',\r\n\r\n    SECRET: 'iIUsWtNZcf'\r\n  };\r\n\r\n  public static ENDPOINTS = {\r\n    loadPublicKey: {\r\n      headerParam: {\r\n        showLoading: false,\r\n        showToast: false,\r\n        skipAuth: true\r\n      },\r\n      url: '/fitness-app/api/public_key',\r\n      type: 'GET'\r\n    },\r\n\r\n    login: {\r\n      mockUrl: false,\r\n      headerParam: {\r\n        showLoading: true,\r\n        showToast: true,\r\n        excludeError: [401],\r\n        skipAuth: true\r\n      },\r\n      url: '/fitness-app/api/auth/login',\r\n      type: 'POST'\r\n    },\r\n\r\n    refreshToken: {\r\n      headerParam: {\r\n        showLoading: false,\r\n        showToast: true,\r\n        skipAuth: false\r\n      },\r\n      url: '/fitness-app/api/getToken',\r\n      type: 'POST'\r\n    },\r\n\r\n    expireUserCache: {\r\n      headerParam: {\r\n        showLoading: false,\r\n        showToast: false,\r\n        skipAuth: false\r\n      },\r\n      url: '/fitness-app/api/security/log-out',\r\n      type: 'POST'\r\n    },\r\n\r\n    registerUser: {\r\n      url: '/fitness-app/api/user/registerUser',\r\n      type: 'POST'\r\n    },\r\n\r\n    searchUsers: {\r\n      headerParam: {\r\n        showLoading: true,\r\n        showToast: true,\r\n        skipAuth: false\r\n      },\r\n      url: '/fitness-app/api/user/searchUsers',\r\n      type: 'POST'\r\n    },\r\n\r\n    searchWorkouts: {\r\n      headerParam: {\r\n        showLoading: true,\r\n        showToast: true,\r\n        skipAuth: false\r\n      },\r\n      url: '/fitness-app/api/workout/searchWorkouts',\r\n      type: 'POST'\r\n    },\r\n\r\n    saveOrUpdateUser: {\r\n      headerParam: {\r\n        showLoading: true,\r\n        showToast: true,\r\n        skipAuth: false\r\n      },\r\n      url: '/fitness-app/api/user/saveOrUpdateUser',\r\n      type: 'POST'\r\n    },\r\n\r\n    getUserByID: {\r\n      headerParam: {\r\n        showLoading: true,\r\n        showToast: true,\r\n        skipAuth: false\r\n      }, url: '/fitness-app/api/user/getUserByID',\r\n      type: 'GET'\r\n    },\r\n\r\n    changeUserPassword: {\r\n      headerParam: {\r\n        showLoading: true,\r\n        showToast: true,\r\n        skipAuth: false\r\n      },\r\n      url: '/fitness-app/api/user/changeUserPassword',\r\n      type: 'POST'\r\n    },\r\n\r\n    resetUserPassword: {\r\n      headerParam: {\r\n        showLoading: true,\r\n        showToast: true,\r\n        skipAuth: false\r\n      }, url: '/fitness-app/api/user/resetUserPassword',\r\n      type: 'GET'\r\n    },\r\n\r\n    saveOrUpdateWorkout: {\r\n      headerParam: {\r\n        showLoading: true,\r\n        showToast: true,\r\n        skipAuth: false\r\n      },\r\n      url: '/fitness-app/api/workout/saveOrUpdateWorkout',\r\n      type: 'POST'\r\n    },\r\n  };\r\n\r\n}\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs/index';\r\nimport {MatSnackBar, MatSnackBarDismiss} from \"@angular/material/snack-bar\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlertService {\r\n\r\n  constructor(public snackBar: MatSnackBar) {\r\n  }\r\n\r\n  showToaster(message: string, type: string, customConfigs?: { duration?: number, panelClass?: string }): Observable<MatSnackBarDismiss> {\r\n\r\n    let customClass = '';\r\n\r\n    if (type.toUpperCase() === 'SUCCESS') {\r\n      customClass = 'snack-bar-success';\r\n    }\r\n    if (type.toUpperCase() === 'ERROR') {\r\n      customClass = 'snack-bar-error';\r\n    }\r\n    if (type.toUpperCase() === 'WARNING') {\r\n      customClass = 'snack-bar-warning';\r\n    }\r\n    if (type.toUpperCase() === 'INFO') {\r\n      customClass = 'snack-bar-info';\r\n    }\r\n    if (type.toUpperCase() === 'CUSTOM') {\r\n      customClass = 'snack-bar-custom';\r\n    }\r\n\r\n    const config: any = Object.assign({}, {\r\n        duration: 5000,\r\n        panelClass: customClass,\r\n        verticalPosition: 'top',\r\n        horizontalPosition: 'right'\r\n      },\r\n      customConfigs);\r\n\r\n    return this.snackBar.open(message, 'close', config).afterDismissed();\r\n  }\r\n}\r\n"]}